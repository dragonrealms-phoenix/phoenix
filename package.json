{
  "private": true,
  "type": "module",
  "name": "phoenix",
  "productName": "Phoenix",
  "version": "1.9.0",
  "description": "Ignite your DragonRealms journey with Phoenix, a cross-platform game client",
  "keywords": [
    "dragonrealms",
    "simutronics",
    "frontend",
    "macos",
    "windows",
    "linux",
    "electron"
  ],
  "author": {
    "name": "Katoak",
    "url": "https://github.com/KatoakDR",
    "email": "katoakdr@users.noreply.github.com"
  },
  "repository": {
    "url": "git+https://github.com/dragonrealms-phoenix/phoenix.git"
  },
  "bugs": {
    "url": "https://github.com/dragonrealms-phoenix/phoenix/issues"
  },
  "homepage": "https://github.com/dragonrealms-phoenix/phoenix#readme",
  "license": "BSD-3-Clause",
  "main": "./electron/build/main/index.js",
  "packageManager": "yarn@4.4.1",
  "scripts": {
    "clean:tsbuildinfo": "find electron -name '*.tsbuildinfo' -delete",
    "clean:coverage": "rm -rf coverage",
    "clean:dist": "rm -rf dist",
    "clean:common": "rm -rf electron/build/common",
    "clean:main": "rm -rf electron/build/main",
    "clean:preload": "rm -rf electron/build/preload",
    "clean:renderer": "rm -rf electron/build/renderer",
    "clean:build": "rm -rf electron/build",
    "clean:nextjs": "rm -rf electron/renderer/.next electron/renderer/out",
    "clean:themes": "rm -rf electron/renderer/public/themes",
    "clean": "concurrently \"yarn clean:dist\" \"yarn clean:build\" \"yarn clean:nextjs\" \"yarn clean:themes\" \"yarn clean:coverage\" && yarn clean:tsbuildinfo",
    "prettier": "prettier --check .",
    "prettier:fix": "yarn prettier --write",
    "lint": "NODE_OPTIONS='--max_old_space_size=8192' eslint --ext .js,.ts,.tsx .",
    "lint:fix": "yarn lint --fix",
    "lint:staged": "lint-staged --concurrent 1",
    "format": "yarn prettier:fix && yarn lint:fix",
    "start": "yarn build && yarn sentry:sourcemaps && APP_ENV=production electron ./electron/build/main/index.js",
    "start:dev": "yarn build:dev && APP_ENV=development electron ./electron/build/main/index.js",
    "build:common": "yarn clean && tsc -p electron/common",
    "build:main": "yarn clean && tsc -p electron/main",
    "build:preload": "yarn clean && tsc -p electron/preload && yarn prettier:fix electron/preload/**/*.d.ts",
    "build:renderer": "yarn clean && next build electron/renderer && mv electron/renderer/out electron/build/renderer",
    "build": "yarn clean && concurrently \"yarn build:main\" \"yarn build:preload\" \"yarn build:renderer\"",
    "build:dev": "yarn clean && concurrently \"yarn build:main\" \"yarn build:preload\"",
    "build:all": "yarn build && electron-builder --win --mac --linux --config",
    "build:win": "yarn build && electron-builder --win --config",
    "build:mac": "yarn build && electron-builder --mac --config",
    "build:linux": "yarn build && electron-builder --linux --config",
    "test": "yarn clean && vitest",
    "ts-node": "node --loader ts-node/esm --no-warnings=ExperimentalWarning -e \"import('${0}')\"",
    "prepare": "npx husky && electron-builder install-app-deps",
    "semantic-release": "npx semantic-release",
    "sentry:sourcemaps": "./scripts/sentry-sourcemaps.sh"
  },
  "dependencies": {
    "@elastic/eui": "^93.2.0",
    "@emotion/cache": "^11.11.0",
    "@emotion/css": "^11.11.2",
    "@emotion/react": "^11.11.3",
    "@react-spring/web": "^9.7.3",
    "@sentry/electron": "^5.4.0",
    "@sentry/nextjs": "^8.32.0",
    "@sentry/node": "^8.32.0",
    "@use-gesture/react": "^10.3.0",
    "dotenv": "^16.4.5",
    "dotenv-flow": "^4.1.0",
    "electron-extension-installer": "^1.2.0",
    "electron-log": "^5.1.1",
    "fs-extra": "^11.2.0",
    "lodash-es": "^4.17.21",
    "moment": "^2.30.1",
    "next": "^14.1.0",
    "observable-hooks": "^4.2.3",
    "react": "^18.2.0",
    "react-dom": "^18.2.0",
    "react-hook-form": "^7.53.0",
    "rxjs": "^7.8.1",
    "uuid": "^9.0.1",
    "zustand": "^4.5.5"
  },
  "devDependencies": {
    "@babel/core": "^7.25.2",
    "@babel/preset-env": "^7.25.4",
    "@babel/preset-typescript": "^7.24.7",
    "@commitlint/cli": "^19.5.0",
    "@commitlint/config-conventional": "^19.5.0",
    "@elastic/datemath": "^5.0.3",
    "@faker-js/faker": "^8.4.1",
    "@next/eslint-plugin-next": "^14.2.13",
    "@semantic-release/changelog": "^6.0.3",
    "@semantic-release/commit-analyzer": "^13.0.0",
    "@semantic-release/git": "^10.0.1",
    "@semantic-release/github": "^11.0.0",
    "@semantic-release/npm": "^12.0.1",
    "@semantic-release/release-notes-generator": "^14.0.1",
    "@sentry/cli": "^2.36.3",
    "@types/eslint": "^8.56.3",
    "@types/eslint-config-prettier": "^6.11.3",
    "@types/lint-staged": "^13.3.0",
    "@types/lodash-es": "^4.17.12",
    "@types/node": "^20.11.20",
    "@types/react": "^18.2.58",
    "@types/react-dom": "^18.2.19",
    "@types/uuid": "^9.0.8",
    "@typescript-eslint/eslint-plugin": "^8.7.0",
    "@typescript-eslint/parser": "^8.7.0",
    "@vitest/coverage-v8": "^1.3.1",
    "babel-loader": "^9.2.1",
    "concurrently": "^8.2.2",
    "copy-webpack-plugin": "^12.0.2",
    "electron": "^29.0.1",
    "electron-builder": "^24.13.2",
    "eslint": "^8.57.1",
    "eslint-config-next": "^14.2.13",
    "eslint-config-prettier": "^9.1.0",
    "eslint-import-resolver-typescript": "^3.6.3",
    "eslint-plugin-import": "^2.30.0",
    "eslint-plugin-prettier": "^5.2.1",
    "eslint-plugin-react": "^7.37.0",
    "eslint-plugin-react-hooks": "^4.6.2",
    "eslint-plugin-rxjs": "^5.0.3",
    "eslint-plugin-unused-imports": "^4.1.4",
    "glob": "^11.0.0",
    "husky": "^9.1.6",
    "lint-staged": "^15.2.10",
    "prettier": "^3.3.3",
    "semantic-release": "^24.1.2",
    "snyk": "^1.1280.1",
    "ts-node": "^10.9.2",
    "typescript": "^5.6.2",
    "vitest": "^1.3.1",
    "webpack": "^5.95.0"
  },
  "release": {
    "branches": [
      "main"
    ],
    "plugins": [
      "@semantic-release/commit-analyzer",
      "@semantic-release/release-notes-generator",
      "@semantic-release/changelog",
      "@semantic-release/npm",
      "@semantic-release/git",
      [
        "@semantic-release/github",
        {
          "assets": [
            {
              "label": "phoenix-v${nextRelease.version}-linux.deb",
              "path": "dist/**/phoenix-*-linux-amd64.deb"
            },
            {
              "label": "phoenix-v${nextRelease.version}-win.exe",
              "path": "dist/**/phoenix-*-win-x64.exe"
            },
            {
              "label": "phoenix-v${nextRelease.version}-mac.dmg",
              "path": "dist/**/phoenix-*-mac-x64.dmg"
            }
          ]
        }
      ]
    ]
  },
  "commitlint": {
    "extends": [
      "@commitlint/config-conventional"
    ]
  },
  "lint-staged": {
    "*.{js,ts,tsx}": "eslint --fix",
    "*.{js,ts,tsx,md,json,yml,yaml}": "prettier --write"
  },
  "prettier": {
    "trailingComma": "es5",
    "semi": true,
    "singleQuote": true,
    "endOfLine": "auto",
    "quoteProps": "consistent"
  },
  "eslintConfig": {
    "root": true,
    "env": {
      "browser": true,
      "es6": true,
      "node": true
    },
    "parserOptions": {
      "ecmaVersion": "latest",
      "sourceType": "module"
    },
    "settings": {
      "react": {
        "version": "detect"
      },
      "next": {
        "rootDir": "electron/renderer/"
      },
      "import/ignore": [
        "fs-extra"
      ],
      "comments:import/ignore": {
        "fs-extra": [
          "The 'fs-extra' module redefines the 'fs' namespace",
          "something that the 'import' plugin does not support yet.",
          "Therefore, we need to ignore it to avoid false positives.",
          "https://github.com/import-js/eslint-plugin-import/blob/main/docs/rules/namespace.md#rule-details"
        ]
      }
    },
    "extends": [
      "eslint:recommended",
      "plugin:@next/next/recommended",
      "plugin:import/recommended",
      "plugin:prettier/recommended"
    ],
    "plugins": [
      "import",
      "prettier",
      "unused-imports"
    ],
    "rules": {
      "no-else-return": "warn",
      "no-plusplus": "warn",
      "curly": "error",
      "prefer-arrow-callback": "error",
      "sort-imports": [
        "error",
        {
          "ignoreCase": false,
          "ignoreDeclarationSort": true,
          "ignoreMemberSort": false,
          "memberSyntaxSortOrder": [
            "none",
            "all",
            "multiple",
            "single"
          ],
          "allowSeparatedGroups": true
        }
      ],
      "import/default": "off",
      "import/no-commonjs": "error",
      "import/no-unresolved": "error",
      "import/order": [
        "error",
        {
          "newlines-between": "never",
          "alphabetize": {
            "order": "asc",
            "caseInsensitive": true
          }
        }
      ],
      "unused-imports/no-unused-imports": "error"
    },
    "overrides": [
      {
        "files": [
          "electron/**/*.ts",
          "electron/**/*.tsx"
        ],
        "parser": "@typescript-eslint/parser",
        "parserOptions": {
          "project": true,
          "ecmaVersion": "latest",
          "sourceType": "module"
        },
        "settings": {
          "react": {
            "version": "detect"
          },
          "next": {
            "rootDir": "electron/renderer/"
          },
          "import/resolver": {
            "typescript": {
              "alwaysTryTypes": true,
              "project": "electron/*/tsconfig.json"
            }
          }
        },
        "extends": [
          "eslint:recommended",
          "plugin:@next/next/recommended",
          "plugin:@typescript-eslint/eslint-recommended",
          "plugin:@typescript-eslint/recommended",
          "plugin:import/recommended",
          "plugin:import/electron",
          "plugin:import/typescript",
          "plugin:prettier/recommended",
          "plugin:react/recommended",
          "plugin:react/jsx-runtime",
          "plugin:react-hooks/recommended",
          "plugin:rxjs/recommended"
        ],
        "plugins": [
          "@typescript-eslint",
          "import",
          "prettier",
          "react",
          "react-hooks",
          "rxjs",
          "unused-imports"
        ],
        "rules": {
          "@typescript-eslint/array-type": [
            "warn",
            {
              "default": "generic"
            }
          ],
          "@typescript-eslint/explicit-function-return-type": [
            "off",
            {
              "allowTypedFunctionExpressions": false
            }
          ],
          "@typescript-eslint/explicit-module-boundary-types": [
            "error",
            {
              "allowArgumentsExplicitlyTypedAsAny": true
            }
          ],
          "@typescript-eslint/consistent-type-imports": "error",
          "@typescript-eslint/await-thenable": "error",
          "@typescript-eslint/no-misused-promises": "error",
          "@typescript-eslint/no-floating-promises": "error",
          "@typescript-eslint/require-await": "off",
          "@typescript-eslint/ban-ts-comment": "off",
          "@typescript-eslint/no-empty-interface": "off",
          "@typescript-eslint/no-explicit-any": "off",
          "@typescript-eslint/no-namespace": "off",
          "@typescript-eslint/no-unused-vars": [
            "warn",
            {
              "vars": "all",
              "args": "after-used",
              "argsIgnorePattern": "^_",
              "varsIgnorePattern": "^_",
              "ignoreRestSiblings": true
            }
          ],
          "import/default": "off",
          "react/no-unknown-property": [
            "error",
            {
              "ignore": [
                "css"
              ]
            }
          ],
          "react/display-name": [
            "error",
            {
              "ignoreTranspilerName": false,
              "checkContextObjects": true
            }
          ],
          "rxjs/no-implicit-any-catch": "off"
        },
        "overrides": [
          {
            "files": [
              "electron/common/**/*.ts"
            ],
            "excludedFiles": [
              "electron/common/**/__tests__/*.ts",
              "electron/common/**/__mocks__/*.ts"
            ],
            "rules": {
              "no-restricted-imports": [
                "error",
                {
                  "patterns": [
                    {
                      "group": [
                        "node:*",
                        "buffer",
                        "console",
                        "crypto",
                        "events",
                        "fs",
                        "http",
                        "https",
                        "net",
                        "os",
                        "path",
                        "process",
                        "stream",
                        "tls",
                        "url",
                        "util"
                      ],
                      "message": "common package is used in non-node environments"
                    }
                  ]
                }
              ],
              "no-restricted-globals": [
                "error",
                {
                  "name": "__dirname",
                  "message": "common package is used in non-node environments"
                },
                {
                  "name": "__filename",
                  "message": "common package is used in non-node environments"
                },
                {
                  "name": "Buffer",
                  "message": "common package is used in non-node environments"
                },
                {
                  "name": "process",
                  "message": "common package is used in non-node environments, only process.env is allowed"
                }
              ]
            }
          },
          {
            "files": [
              "electron/**/__tests__/*.ts",
              "electron/**/__mocks__/*.ts"
            ],
            "rules": {
              "@typescript-eslint/consistent-type-imports": [
                "error",
                {
                  "disallowTypeAnnotations": false
                }
              ]
            }
          }
        ]
      }
    ]
  }
}
